{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the documentation of Cookiecake! 1 - an opinionated Data Science Cookiecutter. Featuring: A modern and open-source data science stack \u00b6 MLFlow for experiment tracking \ud83d\udc69\ud83c\udffd\u200d\ud83d\udd2c\ud83d\udcd1 and easy model server building. \ud83d\udc68\ud83c\udffc\u200d\ud83d\udd27 Prefect 2.0 for data workflow orchestration. \ud83d\udd22\ud83d\udd00\ud83c\udfbb Testing Deepchecks for data and model validation. \ud83e\uddea pytest to run Deepchecks in your codebase. \u2705 Iterative tools DVC for data and model versioning and cached experiment pipelines \ud83c\udf9b\ufe0f - ensuring experiment reproducibility . MLEM as an alternative tool for model deployment.\ud83d\ude3a JupyterLab for data exploration and literate programming. \ud83d\udcda Mambaforge as the package manager. \ud83d\udc0d\ud83d\udee0\ufe0f\ud83d\udce6 None of these tools lock you down to any vendor 2 and are entirely self-hostable where applicable. Inspired by Cookiecutter Modern Data Science and OpenMLOps . What is this project \u00b6 This is a cookiecutter to generate a project template for you to structure your data science work using best practices and modern tooling. What this project is not \u00b6 This is not: an ETL template - your data sources are assumed to be consolidated in a data warehouse / lake. an Infrastructure as Code (IaC) source: you will need to set up your infrastructure and look into how to connect the code of this template to your infrastructure yourself. OpenMLOps , for instance, is using Terraform for spinning up their solution in AWS. The best cake there is in the world. \u21a9 but some may offer their own hosted solution. \u21a9","title":"Home"},{"location":"#a-modern-and-open-source-data-science-stack","text":"MLFlow for experiment tracking \ud83d\udc69\ud83c\udffd\u200d\ud83d\udd2c\ud83d\udcd1 and easy model server building. \ud83d\udc68\ud83c\udffc\u200d\ud83d\udd27 Prefect 2.0 for data workflow orchestration. \ud83d\udd22\ud83d\udd00\ud83c\udfbb Testing Deepchecks for data and model validation. \ud83e\uddea pytest to run Deepchecks in your codebase. \u2705 Iterative tools DVC for data and model versioning and cached experiment pipelines \ud83c\udf9b\ufe0f - ensuring experiment reproducibility . MLEM as an alternative tool for model deployment.\ud83d\ude3a JupyterLab for data exploration and literate programming. \ud83d\udcda Mambaforge as the package manager. \ud83d\udc0d\ud83d\udee0\ufe0f\ud83d\udce6 None of these tools lock you down to any vendor 2 and are entirely self-hostable where applicable. Inspired by Cookiecutter Modern Data Science and OpenMLOps .","title":"A modern and open-source data science stack"},{"location":"#what-is-this-project","text":"This is a cookiecutter to generate a project template for you to structure your data science work using best practices and modern tooling.","title":"What is this project"},{"location":"#what-this-project-is-not","text":"This is not: an ETL template - your data sources are assumed to be consolidated in a data warehouse / lake. an Infrastructure as Code (IaC) source: you will need to set up your infrastructure and look into how to connect the code of this template to your infrastructure yourself. OpenMLOps , for instance, is using Terraform for spinning up their solution in AWS. The best cake there is in the world. \u21a9 but some may offer their own hosted solution. \u21a9","title":"What this project is not"},{"location":"getting_started/","text":"Getting Started \u00b6 Installation \u00b6 Install Mamba Installing from the miniforge distribution is recommended if you do not have conda Otherwise conda install -c conda-forge mamba . Install cookiecutter: mamba install cookiecutter -y Managing your installations in separate environments is highly recommended. Generate the project structure: cookiecutter gh:bgalvao/ds-cookiecutter Install the data science stack: mamba create --name cookiecake --file dev.txt Start Jupyter Lab \u00b6 If you have not changed the project name, then ./cookiecake is the path where the project was generated. Adapt accordingly: cd cookiecake mamba activate cookiecake # activate conda env jupyter lab # start jupyter lab Now you are ready to follow the Usage docs.","title":"Getting Started"},{"location":"getting_started/#getting-started","text":"","title":"Getting Started"},{"location":"getting_started/#installation","text":"Install Mamba Installing from the miniforge distribution is recommended if you do not have conda Otherwise conda install -c conda-forge mamba . Install cookiecutter: mamba install cookiecutter -y Managing your installations in separate environments is highly recommended. Generate the project structure: cookiecutter gh:bgalvao/ds-cookiecutter Install the data science stack: mamba create --name cookiecake --file dev.txt","title":"Installation"},{"location":"getting_started/#start-jupyter-lab","text":"If you have not changed the project name, then ./cookiecake is the path where the project was generated. Adapt accordingly: cd cookiecake mamba activate cookiecake # activate conda env jupyter lab # start jupyter lab Now you are ready to follow the Usage docs.","title":"Start Jupyter Lab"},{"location":"stack_reference/dvc/","text":"dvc \u00b6","title":"dvc"},{"location":"stack_reference/dvc/#dvc","text":"","title":"dvc"},{"location":"stack_reference/mlflow/","text":"MLFlow \u00b6","title":"MLFlow"},{"location":"stack_reference/mlflow/#mlflow","text":"","title":"MLFlow"},{"location":"stack_reference/prefect/","text":"Prefect \u00b6","title":"Prefect"},{"location":"stack_reference/prefect/#prefect","text":"","title":"Prefect"},{"location":"usage/dataset_development/","text":"","title":"Dataset Development"},{"location":"usage/introduction/","text":"Preconfigured example \u00b6","title":"Preconfigured example"},{"location":"usage/introduction/#preconfigured-example","text":"","title":"Preconfigured example"},{"location":"usage/model/","text":"Model \u00b6 In this section you will find how Cookiecake and its bundled tools can help you with: Model Development Model Server Building (Docker) Model Deployment","title":"Model"},{"location":"usage/model/#model","text":"In this section you will find how Cookiecake and its bundled tools can help you with: Model Development Model Server Building (Docker) Model Deployment","title":"Model"},{"location":"usage/model/deployment/","text":"Model deployment \u00b6 From pre-built docker images \u00b6 Directly from MLEM or MLFlow CLIs \u00b6","title":"Deployment"},{"location":"usage/model/deployment/#model-deployment","text":"","title":"Model deployment"},{"location":"usage/model/deployment/#from-pre-built-docker-images","text":"","title":"From pre-built docker images"},{"location":"usage/model/deployment/#directly-from-mlem-or-mlflow-clis","text":"","title":"Directly from MLEM or MLFlow CLIs"},{"location":"usage/model/development/","text":"","title":"Development"},{"location":"usage/model/server_building/","text":"Model server building \u00b6 Using MLEM \u00b6 Using MLFlow models \u00b6","title":"Server Building"},{"location":"usage/model/server_building/#model-server-building","text":"","title":"Model server building"},{"location":"usage/model/server_building/#using-mlem","text":"","title":"Using MLEM"},{"location":"usage/model/server_building/#using-mlflow-models","text":"","title":"Using MLFlow models"}]}